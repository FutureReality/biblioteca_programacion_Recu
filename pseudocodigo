


#Este sera el que permita al user agregar libros
agregar():
    LimpiarPantalla()
    #Si el usuario en alguno de los campos escribe back vuelve al campo anterior
    #Si el usuario en alguno de los campos escribe esc, vuelve al menu inicial
    mostrarEnPantalla("Rellena los siguientes campos. <<back>> para campo anterior <<esc>> para volver al menú")

    isbn = input("ISBN (formato XXX-XXXXX-XXX): ")
    #Comprobamos que se siga el estandard, si no se cumple no se permite y se reintenta
    si isbn no cumple con REGEX XXX-XXXXX-XXX:
        mostrarEnPantalla("ERROR: El ISBN", isbn, "no sigue el formato válido.")
        volver a agregar()

    si isbn en biblioteca:
        mostrarEnPantalla("ERROR: El ISBN", isbn, "ya existe.")
        volver a agregar()

    titulo = input("Título: ")
    autor = input("Autor: ")
    estado = "DISPONIBLE"

    #Se agrega el libro al hashmap
    nuevoLibro = Llibre(isbn, titulo, autor, estado)
    biblioteca[isbn] = nuevoLibro

    mostrarEnPantalla("Libro agregado con éxito.")
    esperarTecla()

#Aqui es donde el usuario podra buscar entre los libros almacenados
buscar():
    LimpiarPantalla()
    #Para evitar el casesensitive todo se transforma a diminutiva
    termino = input("Introduce titulo o parte del titulo a buscar: ").toLowerCase()

    encontrados = []
    por cada libro en biblioteca:
	#Como el almacenaje tiene que ser con casesensitive, aqui tambien tenemos que diminutar
        si libro.titulo.toLowerCase() contiene termino:
            añadir libro a encontrados

    si encontrados está vacío:
        mostrarEnPantalla("No se encontro ningun libr con ese titulo.")
    sino:
        por cada libro en encontrados:
            mostrarEnPantalla(libro)

    esperarTecla()

-------------------------------------------------------------------------------

#Aqui el usuario podra decidir prestar un libro
prestar():
    LimpiarPantalla()
    isbn = input("Introduce el ISBN del libro que quieres prestar: ")

    si isbn no en biblioteca:
        mostrarEnPantalla("No existe un libro con ese ISBN.")
        esperarTecla()
        return

    #Comprueba si el libro ya estaba prestado anteriormente
    libro = biblioteca[isbn]
    si libro.estado == "EN PRESTEC":
        mostrarEnPantalla("Ese libro ya esta prestado.")
    sino:
        libro.estado = "EN PRESTEC"
        mostrarEnPantalla("Prestamo realizado con exito.")

    esperarTecla()

----------------------------------------------------------------------------------
#Aqui el usuario devuelve el libro prestado
retornar():
    LimpiarPantalla()
    isbn = input("Introduce el ISBN del libro a retornar: ")

    si isbn no en biblioteca:
        mostrarEnPantalla("No existe un libro con ese ISBN.")
        esperarTecla()
        return

    #Se comprueba si el libro ya estaba prestado en un priciop
    libro = biblioteca[isbn]
    si libro.estado == "DISPONIBLE":
        mostrarEnPantalla("El libro ya estd disponible.")
    sino:
        libro.estado = "DISPONIBLE"
        mostrarEnPantalla("Libro retornado correctamente.")

    esperarTecla()
----------------------------------------------------------------------------------
#donde se almacenaran los libros
biblioteca = HashMap<String, Llibre>()

#desde aqui se llamaran al resto de funciones
inicio():
    mientras verdadero:
	#El limpiar es un clear o cls depende del so
        LimpiarPantalla()
        mostrarEnPantalla("Selecciona una opción: (A)gregar, (B)uscar, (P)restar, (R)etornar, (G)uardar, (C)argar, (S)alir")

        UserInput = input()

        por caracter en UserInput:
	    #Comprobamos que solo contenga letras
            si caracter no está en (a-z, A-Z):
                LimpiarPantalla()
                mostrarEnPantalla("¡No se permiten ni números ni caracteres especiales!")
                continuar bucle

        UserInput = convertirAMinusculas(UserInput)

	#Se llama a una funcion o aotra
        opciones:
            si UserInput == "a" o "agregar":
                agregar()

            si UserInput == "b" o "buscar":
                buscar()

            si UserInput == "p" o "prestar":
                prestar()

            si UserInput == "r" o "retornar":
                retornar()

            si UserInput == "g" o "guardar":
                guardar()

            si UserInput == "c" o "cargar":
                cargar()

            si UserInput == "s" o "salir":
                salir del programa

            sino:
                LimpiarPantalla()
                mostrarEnPantalla(UserInput, " no es una opción válida")
